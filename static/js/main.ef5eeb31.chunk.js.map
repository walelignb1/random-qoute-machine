{"version":3,"sources":["Color.js","App.js","index.js"],"names":["Color","App","useState","quote","setQuote","author","setAuthor","quotesArray","setQuotesArray","bgColor","setBgColor","fetchQuote","a","fetch","response","json","NewQuotes","quotes","console","log","useEffect","className","style","backgroundColor","id","Style","color","title","target","href","fontSize","rel","onClick","randomNumber","Math","floor","random","getRandomQuote","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAWeA,EAXD,CAAC,UAAW,UAAW,UAAW,UAAW,UAC3C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,W,OCmD7CC,EArDH,WACV,MAA0BC,mBAAS,+EAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA2BF,mBAAS,eAApC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA8BN,mBAAS,KAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEMC,EAAU,uCAAG,8BAAAC,EAAA,+EAGQC,MAVnB,0IAOW,cAGTC,EAHS,gBAISA,EAASC,OAJlB,OAITC,EAJS,OAKfR,EAAeQ,EAAUC,QALV,kDAQfC,QAAQC,IAAR,MARe,0DAAH,qDAuBhB,OAZAC,qBAAU,WACRT,MACC,IAWD,qBAAKU,UAAU,OAAOC,MAAO,CAACC,gBAAiBd,GAA/C,SACE,sBAAKe,GAAG,UAAR,UACI,sBAAKA,GAAG,YAAR,UACE,sBAAKH,UAAU,aAAaI,MAAM,cAAlC,UACA,cAAC,IAAD,CAAcH,MAAO,CAACI,MAAOjB,KAD7B,KAC0C,sBAAMe,GAAG,OAAOF,MAAO,CAACI,MAAOjB,GAA/B,SAA0CN,OAEpF,sBAAKkB,UAAU,eAAeI,MAAM,cAApC,eAAoD,sBAAMD,GAAG,SAASF,MAAO,CAACI,MAAOjB,GAAjC,SAA4CJ,OAChG,sBAAKgB,UAAU,UAAf,UACE,mBAAGA,UAAU,aAAaG,GAAG,cAAcF,MAAO,CAACC,gBAAiBd,GAAUkB,MAAM,oBAAoBC,OAAO,OAAOC,KAAK,yMAA3H,SACE,cAAC,IAAD,CAAWC,SAAU,GAAIT,UAAU,YAErC,mBAAGA,UAAU,aAAaG,GAAG,eAAeF,MAAO,CAACC,gBAAiBd,GAAUkB,MAAM,6BAA6BC,OAAO,SAASG,IAAI,aAAcF,KAAK,4SAAzJ,SACI,cAAC,IAAD,CAAUC,SAAU,GAAKT,UAAU,YAEvC,wBAAQA,UAAU,cAAcG,GAAG,YAAYF,MAAO,CAACC,gBAAiBd,GAAUuB,QAAS,kBAvBvG,WACE,IAAMC,EAAeC,KAAKC,MAAsB,IAAhBD,KAAKE,UACrC1B,EAAWV,EAAMiC,IACjB7B,EAASG,EAAY0B,GAAc9B,OACnCG,EAAUC,EAAY0B,GAAc5B,QACpCa,QAAQC,IAAIc,GAkB6FI,IAA/F,6BAGJ,sBAAKhB,UAAU,SAAf,gBAA2B,mBAAGQ,KAAK,4BAAR,4BChDrCS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ef5eeb31.chunk.js","sourcesContent":["const Color = ['#FF6633', '#FFB399', '#FF33FF', '#FFFF99', '#00B3E6', \r\n                '#E6B333', '#3366E6', '#999966', '#99FF99', '#B34D4D',\r\n                '#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A', \r\n                '#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC',\r\n                '#66994D', '#B366CC', '#4D8000', '#B33300', '#CC80CC', \r\n                '#66664D', '#991AFF', '#E666FF', '#4DB3FF', '#1AB399',\r\n                '#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680', \r\n                '#4D8066', '#809980', '#E6FF80', '#1AFF33', '#999933',\r\n                '#FF3380', '#CCCC00', '#66E64D', '#4D80CC', '#9900B3', \r\n                '#E64D66', '#4DB380', '#FF4D4D', '#99E6E6', '#6666FF'];\r\n\r\nexport default Color;","import React, { useEffect, useState } from \"react\"\nimport \"./App.css\"\nimport {FaQuoteLeft,FaTwitter,FaTumblr} from \"react-icons/fa\";\nimport Color from \"./Color.js\"\n\n\nlet url = 'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json';\nconst App = () => {\n  const [quote, setQuote] = useState(\"Life isn’t about getting and having, it’s about giving and being.\")\n  const [author,setAuthor] = useState(\"Kevin Kruse\")\n  const [quotesArray, setQuotesArray] = useState([])\n  const [bgColor, setBgColor] = useState('#')\n  \n  const fetchQuote = async () => {\n  \n    try {\n      const response = await fetch(url)\n      const NewQuotes = await response.json()\n      setQuotesArray(NewQuotes.quotes)\n\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  useEffect(() => {\n    fetchQuote()\n  }, [])\n\n  function getRandomQuote(){\n    const randomNumber = Math.floor(Math.random() * 102)\n    setBgColor(Color[randomNumber])\n    setQuote(quotesArray[randomNumber].quote)\n    setAuthor(quotesArray[randomNumber].author)\n    console.log(randomNumber)\n  }\n\n  return (\n    <div className=\"main\" style={{backgroundColor: bgColor}}>\n      <div id=\"wrapper\">\n          <div id=\"quote-box\" >\n            <div className=\"quote-text\" Style=\"opacity: 1;\">\n            <FaQuoteLeft  style={{color: bgColor}}/>  <span id=\"text\" style={{color: bgColor}}>{quote}</span>\n            </div>\n            <div className=\"quote-author\" Style=\"opacity: 1;\">- <span id=\"author\" style={{color: bgColor}}>{author}</span></div>\n            <div className=\"buttons\">\n              <a className=\"button btn\" id=\"tweet-quote\" style={{backgroundColor: bgColor}} title=\"Tweet this quote!\" target=\"_top\" href=\"https://twitter.com/intent/tweet?hashtags=quotes&amp;related=freecodecamp&amp;text=%22I%20didn%E2%80%99t%20fail%20the%20test.%20I%20just%20found%20100%20ways%20to%20do%20it%20wrong.%22%20Benjamin%20Franklin\" >\n                <FaTwitter fontSize={23} className=\"icons\"/>\n              </a>\n              <a className=\"button btn\" id=\"tumblr-quote\" style={{backgroundColor: bgColor}} title=\"Post this quote on tumblr!\" target=\"_blank\" rel=\"noreferrer\"  href=\"https://www.tumblr.com/widgets/share/tool?posttype=quote&amp;tags=quotes,freecodecamp&amp;caption=Benjamin%20Franklin&amp;content=I%20didn%E2%80%99t%20fail%20the%20test.%20I%20just%20found%20100%20ways%20to%20do%20it%20wrong.&amp;canonicalUrl=https%3A%2F%2Fwww.tumblr.com%2Fbuttons&amp;shareSource=tumblr_share_button\">\n                  <FaTumblr fontSize={23}  className=\"icons\"/>\n              </a>\n              <button className=\"button nbtn\" id=\"new-quote\" style={{backgroundColor: bgColor}} onClick={()=>getRandomQuote()}>New quote</button>\n            </div>\n          </div>\n          <div className=\"footer\">by <a href=\"https://codepen.io/hezag/\">hezag</a></div>\n        </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}